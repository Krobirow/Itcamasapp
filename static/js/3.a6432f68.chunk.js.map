{"version":3,"sources":["Components/hoc/WithAuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Profile/profile.module.css","Components/Profile/ProfileInfo/profileInfo.module.css","Components/Profile/MyPosts/myposts.module.css","Components/Profile/MyPosts/Post/post.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.js","Components/Profile/ProfileInfo/ProfileInfo.js","Components/Profile/MyPosts/Post/Post.js","Components/Profile/MyPosts/MyPosts.js","Components/Profile/MyPosts/MyPostsContainer.js","Components/Profile/Profile.js","Components/Profile/ProfileContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateUserStatus","ProfileInfo","profile","className","s","profileInfo","avatarDescr","src","photos","large","alt","Preloader","Post","postWrap","post","postText","likeDislikeBlock","like","href","likesCount","dislike","dislikesCount","maxLength","maxlengthCreator","MyPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","type","MyPosts","memo","myPostsEl","myPostData","map","p","key","id","myPostsWrap","MyPostsFormWraper","values","addPost","newPostText","myPostsTitle","MyPostsContainer","profilePage","dispatch","Profile","profileWrap","ProfileContainer","userId","match","params","authorizedUserId","history","getProfilePage","getUserStatus","isFetching","compose","withRouter"],"mappings":"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","file":"static/js/3.a6432f68.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrap\":\"profile_profileWrap__3bBGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"profileInfo_profileInfo__2EG2v\",\"avatar\":\"profileInfo_avatar__3n4wi\",\"avatarDescr\":\"profileInfo_avatarDescr__30GlT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsWrap\":\"myposts_myPostsWrap__1tOyj\",\"myPostsTitle\":\"myposts_myPostsTitle__29n4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrap\":\"post_postWrap__unKsU\",\"post\":\"post_post__3aesT\",\"active\":\"post_active__26Key\",\"likeDislikeBlock\":\"post_likeDislikeBlock__TcjAr\",\"like\":\"post_like__1OllM\",\"dislike\":\"post_dislike__2ILXH\"};","import React,  { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [ editMode, setEditMode]= useState(false);\r\n    let [ status, setStatus]= useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] );\r\n\r\n    const activateMod = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{ !editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span  onDoubleClick={activateMod}>{props.status || \"No status here!\"}</span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{editMode && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input  onChange={onStatusChange} autoFocus={true}  onBlur={ deactivateEditMode} value={status} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport s from './profileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, ...props}) => {\r\n\tif(!profile) return <Preloader />\r\n\r\n\treturn <div className={s.profileInfo}>\r\n\t\t\t<div className={s.avatarDescr}>\r\n\t\t\t\t<img src={profile.photos.large ? profile.photos.large : 'https://wallpapercave.com/wp/PCG5mFl.jpg'} alt=\"ava\" />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ProfileStatusWithHooks status={status} updateUserStatus={props.updateUserStatus}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./post.module.css\";\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={s.postWrap}>\r\n\t\t\t<div className={`${s.post}`}>\r\n\t\t\t\t<img src=\"https://wallpapercave.com/wp/PCG5mFl.jpg\" alt=\"cat\" />\r\n\t\t\t\t<span>{props.postText}</span>\r\n\t\t\t\t<div className={s.likeDislikeBlock}>\r\n\t\t\t\t\t<span className={s.like}><a href=\"/like\">Like &nbsp;</a> &nbsp;{props.likesCount} &nbsp;</span>\r\n\t\t\t\t\t<span className={s.dislike}><a href=\"/dislike\">Dislike &nbsp;</a> &nbsp;{props.dislikesCount} &nbsp;</span> \r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./myposts.module.css\";\r\n\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n\trequired,\r\n\tmaxlengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength = maxlengthCreator(1000);\r\n\r\nconst MyPostsForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit} className={s.form}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field\r\n\t\t\t\t\tcomponent={Textarea}\r\n\t\t\t\t\tname='newPostText'\r\n\t\t\t\t\tplaceholder='Enter Your post'\r\n\t\t\t\t\tvalidate={[required, maxLength]}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button type='submit'>Add post</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\nconst MyPostsReduxForm = reduxForm({ form: \"addPost\" })(MyPostsForm);\r\n\r\nconst MyPosts = React.memo( props => {\r\n\t\tlet myPostsEl = props.myPostData.map((p) => (\r\n\t\t\t<Post\r\n\t\t\t\tkey={p.id}\r\n\t\t\t\tid={p.id}\r\n\t\t\t\tpostText={p.postText}\r\n\t\t\t\tlikesCount={p.likesCount}\r\n\t\t\t\tdislikesCount={p.dislikesCount}\r\n\t\t\t/>\r\n\t\t));\r\n\r\n\t\tconst addNewPost = (values) => {\r\n\t\t\tprops.addPost(values.newPostText);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div className={s.myPostsWrap}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>My Posts</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.MyPostsFormWraper}>\r\n\t\t\t\t\t<MyPostsReduxForm onSubmit={addNewPost} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<h3 className={s.myPostsTitle}> New Posts</h3>\r\n\t\t\t\t{myPostsEl}\r\n\t\t\t</div>\r\n\t\t);\r\n})\r\n\r\nexport default MyPosts;\r\n","import { addPost } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n// const MyPostsContainer = () => {\r\n// \t// let state = props.store.getState();\r\n\r\n// \t// let addPost = () => {\r\n// \t// \tprops.store.dispatch(addPost());\r\n// \t// }\r\n\r\n// \t// let onPostChange = (text) => {\r\n// \t// \tlet action = updateNewPostText(text);\r\n// \t// \tprops.store.dispatch(action);\r\n// \t// }\r\n\r\n// \treturn (\r\n// \t\t<StoreContext.Consumer>\r\n// \t\t{\r\n// \t\t\t(store) => {\r\n// \t\t\t\tlet state = store.getState();\r\n// \t\t\t\tlet addPost = () => {\r\n// \t\t\t\t\tstore.dispatch(addPost());\r\n// \t\t\t\t}\r\n\r\n// \t\t\t\tlet onPostChange = (text) => {\r\n// \t\t\t\t\tlet action = updateNewPostText(text);\r\n// \t\t\t\t\tstore.dispatch(action);\r\n// \t\t\t\t}\r\n// \t\t\t\treturn (<MyPosts\r\n// \t\t\t\t\tupdateNewPostText={onPostChange}\r\n// \t\t\t\t\taddPost={addPost}\r\n// \t\t\t\t\tmyPostData={state.profilePage.myPostData}\r\n// \t\t\t\t\tnewPostText={state.profilePage.newPostText}\r\n// \t\t\t\t/>)\r\n// \t\t\t}\r\n// \t\t}\r\n// \t\t</StoreContext.Consumer>\r\n// \t);\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tmyPostData: state.profilePage.myPostData,\r\n\t\tnewPostText: state.profilePage.newPostText\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostText) => {\r\n\t\t\tdispatch(addPost(newPostText));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './profile.module.css';\r\n\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<div className={s.profileWrap}>\r\n\t\t\t<ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n\t\t\t<MyPostsContainer/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getProfilePage, getUserStatus, updateUserStatus } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/WithAuthRedirect';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nclass ProfileContainer extends Component {\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif(!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif(!userId) {\r\n\t\t\t\tthis.props.history.push(\"/login\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getProfilePage(userId);\r\n\r\n\t\tthis.props.getUserStatus(userId);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.props.isFetching \r\n\t\t\t\t\t? <Preloader /> \r\n\t\t\t\t\t: <Profile {...this.props} \r\n\t\t\t\t\t\tprofile={this.props.profile} \r\n\t\t\t\t\t\tstatus={this.props.status} \r\n\t\t\t\t\t\tupdateUserStatus={this.props.updateUserStatus} />}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tisFetching: state.profilePage.isFetching,\r\n\tauthorizedUserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {getProfilePage, getUserStatus, updateUserStatus}),\r\n\twithRouter,\r\n\twithAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}