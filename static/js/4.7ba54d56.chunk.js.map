{"version":3,"sources":["Components/Dialogs/DialogItem/DialogItem.js","Components/Dialogs/Message/Message.js","Components/Dialogs/Dialogs.js","Components/Dialogs/DialogsContainer.js","Components/hoc/WithAuthRedirect.js","Components/Dialogs/dialogs.module.css","Components/Dialogs/DialogItem/dialogItem.module.css","Components/Dialogs/Message/message.module.css"],"names":["DialogItem","props","path","id","className","s","dialog","dialogIcon","activeClassName","active","to","src","ava","alt","dialogLink","name","Message","messageRender","messagesData","map","m","messageLeft","key","message","messageImg","messageRight","maxLength","maxlengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","action","Field","component","Textarea","placeholder","validate","required","type","Dialogs","state","dialogsPage","dialogElements","dialogsData","d","isAuth","dialogsWrap","dialogsItem","messages","dialogsFormWraper","values","console","log","newMessageText","addMessage","compose","connect","dispatch","withAuthRedirect","mapStateToPropsForRedirect","auth","Component","RedirectComponent","this","React","module","exports"],"mappings":"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","file":"static/js/4.7ba54d56.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from \"./dialogItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\tlet path = \"/dialogs/\" + props.id;\r\n\treturn (\r\n\t\t<div className={s.dialog}>\r\n\t\t\t\t<NavLink className={s.dialogIcon} activeClassName={s.active} to={path}> <img src={props.ava} alt=\"cat\"/> </NavLink>\r\n\t\t\t\t<NavLink className={s.dialogLink} activeClassName={s.active} to={path}> {props.name} </NavLink>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./message.module.css\";\r\n\r\nconst Message = (props) => {\r\n\tlet {messagesData} = props;\r\n\r\n\tlet messageRender = messagesData.map(m => {\r\n\t\tif (m.name === 'Dimych') {\r\n\t\t\treturn (\r\n\t\t\t\t<div className={s.messageLeft} id={m.id} key={m.id}>\r\n\t\t\t\t\t<div className={s.message} id={m.id} key={m.id}>\r\n\t\t\t\t\t\t<span className={s.messageImg}>\r\n\t\t\t\t\t\t\t<img src={m.ava} alt=\"cat\"/>\r\n\t\t\t\t\t\t\t<span>{m.name}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span>{m.message}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t} else if (m.name === 'me') {\r\n\t\t\treturn (\r\n\t\t\t\t<div className={s.messageRight} id={m.id} key={m.id}>\r\n\t\t\t\t\t<div className={s.message} id={m.id} key={m.id}>\r\n\t\t\t\t\t\t<span className={s.messageImg}>\r\n\t\t\t\t\t\t\t{/* <img src={m.ava} alt=\"cat\"/> */}\r\n\t\t\t\t\t\t\t{/* <span>{m.name}</span> */}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span>{m.message}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{messageRender}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { required, maxlengthCreator } from \"../../utils/validators/validators\";\r\n\r\nconst maxLength = maxlengthCreator(100);\r\n\r\nconst DialogsForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.form} action=\"\">\r\n            <div>\r\n                <Field component={Textarea}\r\n\t\t\t\t\tname={\"newMessageText\"}\r\n\t\t\t\t\tplaceholder={\"write Your message\"}\r\n\t\t\t\t\tvalidate={[required, maxLength]} \r\n                />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({ form: \"addPost\" })(DialogsForm);\r\n\r\nconst Dialogs = (props) => {\r\n\tlet state = props.dialogsPage;\r\n\tlet dialogElements = state.dialogsData.map( d => <DialogItem name={d.name} id={d.id} key={d.id} ava={d.ava}/>);\r\n\r\n\tconst addNewMessage = (values) => {\r\n\t\tconsole.log(values.newMessageText);\r\n\t\tprops.addMessage(values.newMessageText);\r\n\t};\r\n\r\n\tif (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n\treturn(\r\n\t\t<div className={s.dialogsWrap}>\r\n\t\t\t<div className={s.dialogsItem}>\r\n\t\t\t\t{dialogElements}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t<Message messagesData={state.messagesData}/>\r\n\t\t\t\t<div className={s.dialogsFormWraper}>\r\n\t\t\t\t\t<DialogsReduxForm onSubmit={addNewMessage} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Dialogs;\r\n","import { addMessage } from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from 'react-redux';\r\nimport { withAuthRedirect } from '../hoc/WithAuthRedirect';\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t}\r\n}\r\n\r\n// прототип создания ХОК, логика которая выносится в отдельную функцию с классом\r\n// внутри себя\r\n\r\n// let AuthRedirectComponent = props => {\r\n// \tif (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n// \treturn <Dialogs {...props} />\r\n// }\r\n\r\n// функциональный вариант передачи колбеков и екшенов\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddMessage: (newMessageText) => {\r\n\t\t\tdispatch(addMessage(newMessageText));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrap\":\"dialogs_dialogsWrap__a7_DL\",\"dialogsItem\":\"dialogs_dialogsItem__20jFl\",\"messages\":\"dialogs_messages__1sDLC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"dialogItem_dialog__1ckDR\",\"dialogIcon\":\"dialogItem_dialogIcon__3Zzo6\",\"dialogLink\":\"dialogItem_dialogLink__1X5cS\",\"active\":\"dialogItem_active__23JiO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"message_message__1rjbk\",\"messageImg\":\"message_messageImg__2Duld\",\"messageLeft\":\"message_messageLeft__3wrz-\",\"messageRight\":\"message_messageRight__3xU6Y\"};"],"sourceRoot":""}