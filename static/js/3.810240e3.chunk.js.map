{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/hoc/WithAuthRedirect.js","Components/Profile/ProfileInfo/profileInfo.module.css","Components/Profile/profile.module.css","Components/Profile/MyPosts/myposts.module.css","Components/Profile/MyPosts/Post/post.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.js","Components/Profile/ProfileInfo/ProfileDataForm.js","Components/Profile/ProfileInfo/ProfileInfo.js","Components/Profile/MyPosts/Post/Post.js","Components/Profile/MyPosts/MyPosts.js","Components/Profile/MyPosts/MyPostsContainer.js","Components/Profile/Profile.js","Components/Profile/ProfileContainer.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateUserStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","error","profile","onSubmit","action","className","s","profileDataForm","type","formGlobalError","createField","Input","Textarea","contactsSpan","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","profileData","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactsWrapper","contactTitle","contactValue","Contacts","href","rel","target","ProfileInfo","savePhoto","saveProfile","Preloader","profileInfo","avatar","src","photos","large","alt","statusInfo","files","formData","then","initialValues","Post","postWrap","post","postText","likeDislikeBlock","like","likesCount","dislike","dislikesCount","maxLength","maxlengthCreator","MyPostsReduxForm","Field","component","name","placeholder","validate","required","MyPosts","memo","myPostsEl","myPostData","p","id","myPostsWrap","MyPostsFormWraper","values","addPost","newPostText","myPostsTitle","MyPostsContainer","profilePage","dispatch","Profile","profileWrap","ProfileContainer","userId","match","params","authorizedUserId","history","getProfilePage","getUserStatus","refreshProfile","prevProps","prevState","snapshot","isFetching","compose","withRouter"],"mappings":"sJAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,uIIDlGC,EAA6B,SAACC,GAAD,MAAY,CAC5CC,OAAQD,EAAME,KAAKD,SAGPE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAUtC,OAFiCM,YAAQX,EAARW,CAAoCL,K,oBChBzEM,EAAOC,QAAU,CAAC,YAAc,iCAAiC,OAAS,4BAA4B,WAAa,gCAAgC,aAAe,kCAAkC,gBAAkB,qCAAqC,gBAAkB,uC,oBCA7QD,EAAOC,QAAU,CAAC,YAAc,+B,oBCAhCD,EAAOC,QAAU,CAAC,YAAc,6BAA6B,aAAe,gC,oBCA5ED,EAAOC,QAAU,CAAC,SAAW,uBAAuB,KAAO,mBAAmB,OAAS,qBAAqB,iBAAmB,+BAA+B,KAAO,mBAAmB,QAAU,wB,iJCuCnLC,EAtCgB,SAACN,GAAW,IAAD,EAERO,oBAAS,GAFD,mBAEhCC,EAFgC,KAEtBC,EAFsB,OAGZF,mBAASP,EAAMU,QAHH,mBAGhCA,EAHgC,KAGxBC,EAHwB,KAKtCC,qBAAW,WACPD,EAAUX,EAAMU,UACjB,CAACV,EAAMU,SAeb,OACC,qCACIF,GACF,6BACC,2BAAG,0BAAOK,cAjBS,WAChBJ,GAAY,KAgBwBT,EAAMU,QAAU,mBAAvD,MAGDF,GACA,6BACC,2BAAQM,SAbc,SAACC,GACpBJ,EAAUI,EAAEC,cAAc7B,QAYK8B,WAAW,EAAOC,OAlB1B,WACvBT,GAAY,GACZT,EAAMmB,iBAAiBT,IAgBuDvB,MAAOuB,O,kCCT9EU,EAFkBC,YAAU,CAACC,KAAM,gBAAjBD,EAjBT,SAAC,GAAoC,IAAnCE,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QAC9C,OACC,0BAAMC,SAAUH,EAAcI,OAAO,GAAGC,UAAWC,IAAEC,iBAC3C,6BAAK,4BAAQC,KAAM,UAAd,SACZP,GAAS,yBAAKI,UAAWC,IAAEG,iBAAkBR,GAC/C,iCAAM,kCAAO,2CAAiBS,YAAY,OAAQ,YAAa,WAAY,GAAIC,KAAlE,OACb,iCAAM,kCAAO,mDAAyBD,YAAY,WAAY,GAAI,iBAAkB,GAAIC,QACxF,6BAAK,kCAAO,sDAA4BD,YAAY,OAAQ,yBAA0B,4BAA6B,GAAIE,QAC9G,6BAAK,kCAAO,yCAAeF,YAAY,OAAQ,gBAAiB,UAAW,GAAIE,KAAnE,OACrB,0BAAMP,UAAWC,IAAEO,cAAnB,cACU5D,OAAO6D,KAAKZ,EAAQa,UAAUC,KAAI,SAAAC,GAC/B,OAAO,yBAAKA,IAAKA,EAAKZ,UAAWC,IAAES,UAA5B,IAAuC,+BAAKE,EAAL,KAAYP,YAAY,OAAQO,EAAT,mBAA0BA,GAAO,GAAIN,KAA5D,aC+BxDO,EAAc,SAAC,GAAsC,IAArChB,EAAoC,EAApCA,QAASiB,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aACvC,OACC,yBAAKf,UAAWC,IAAEe,aAChBF,GAAW,6BAAK,4BAAQG,QAASF,GAAjB,SACjB,iCAAM,kCAAO,2CAAiBlB,EAAQqB,SAAzB,OACb,iCAAM,kCAAO,mDAAyBrB,EAAQsB,eAAiB,MAAQ,KAA1D,OACb,6BAAK,kCAAO,sDAA4BtB,EAAQuB,6BAChD,6BAAK,8BAAM,wCAAcvB,EAAQwB,WACjC,0BAAMrB,UAAWC,IAAEO,cAAnB,cACA,yBAAKR,UAAWC,IAAEqB,iBAChB1E,OAAO6D,KAAKZ,EAAQa,UAAUC,KAAI,SAAAC,GAClC,OAAO,kBAAC,EAAD,CAAUA,IAAKA,EAAKW,aAAcX,EAAKY,aAAc3B,EAAQa,SAASE,WASrEa,EAAW,SAAC,GAAkC,IAAjCF,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aACvC,OAAO,4BAAI,2BAAG,uBAAGE,KAAMF,EAAcG,IAAI,sBAAsBC,OAAO,UAAUL,MAGlEM,EA/DK,SAAC,GAA0E,IAAzEhC,EAAwE,EAAxEA,QAASf,EAA+D,EAA/DA,OAAQgC,EAAuD,EAAvDA,QAASvB,EAA8C,EAA9CA,iBAAkBuC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,YAAiB,EAC/DpD,oBAAS,GADsD,mBACvFC,EADuF,KAC7EC,EAD6E,KAI7F,IAAIgB,EAAU,OAAO,kBAACmC,EAAA,EAAD,MAWrB,OAAO,yBAAKhC,UAAWC,IAAEgC,aACvB,yBAAKjC,UAAWC,IAAEiC,QACjB,yBAAKC,IAAKtC,EAAQuC,OAAOC,MAAQH,IAAS,KAAMI,IAAI,QACpD,yBAAKtC,UAAWC,IAAEsC,YACjB,iCAAM,kCAAO,2BAAI1C,EAAQqB,SAAZ,OACb,kBAAC,EAAD,CAAwBpC,OAAQA,EAAQS,iBAAkBA,MAG5D,6BACEuB,GAAW,2BAAOX,KAAM,OAAQjB,SAfR,SAACC,GACzBA,EAAEyC,OAAOY,MAAMhF,QACjBsE,EAAU3C,EAAEyC,OAAOY,MAAM,QAevB5D,EACC,kBAAC,EAAD,CACDkB,SAvBc,SAAA2C,GACjBV,EAAYU,GAAUC,MAAK,kBAAK7D,GAAY,OAuBzCgB,QAASA,EACT8C,cAAe9C,IACd,kBAAC,EAAD,CACDkB,aAAc,WAAOlC,GAAY,IACjCgB,QAASA,EACTiB,QAASA,M,4CCvBC8B,EAfF,SAACxE,GACb,OACC,yBAAK4B,UAAWC,IAAE4C,UACjB,yBAAK7C,UAAS,UAAKC,IAAE6C,OACpB,yBAAKX,IAAKD,IAAQI,IAAI,QACtB,8BAAOlE,EAAM2E,UACb,yBAAK/C,UAAWC,IAAE+C,kBACjB,0BAAMhD,UAAWC,IAAEgD,MAAM,uBAAGvB,KAAK,SAAR,aAAzB,QAAgEtD,EAAM8E,WAAtE,SACA,0BAAMlD,UAAWC,IAAEkD,SAAS,uBAAGzB,KAAK,YAAR,gBAA5B,QAAyEtD,EAAMgF,cAA/E,a,gBCDCC,EAAYC,YAAiB,KAmB7BC,EAAmB9D,YAAU,CAAEC,KAAM,WAAlBD,EAjBL,SAACrB,GACpB,OACC,0BAAM0B,SAAU1B,EAAMuB,aAAcK,UAAWC,IAAEP,MAChD,6BACC,kBAAC8D,EAAA,EAAD,CACCC,UAAWlD,IACXmD,KAAK,cACLC,YAAY,kBACZC,SAAU,CAACC,IAAUR,MAGvB,6BACC,4BAAQlD,KAAK,UAAb,iBAoCW2D,EA7BCxF,IAAMyF,MAAM,SAAA3F,GAC1B,IAAI4F,EAAY5F,EAAM6F,WAAWtD,KAAI,SAACuD,GAAD,OACpC,kBAAC,EAAD,CACCtD,IAAKsD,EAAEC,GACPA,GAAID,EAAEC,GACNpB,SAAUmB,EAAEnB,SACZG,WAAYgB,EAAEhB,WACdE,cAAec,EAAEd,mBAQnB,OACC,yBAAKpD,UAAWC,IAAEmE,aACjB,6BACC,yCAED,yBAAKpE,UAAWC,IAAEoE,mBACjB,kBAACd,EAAD,CAAkBzD,SAVF,SAACwE,GACnBlG,EAAMmG,QAAQD,EAAOE,iBAWpB,wBAAIxE,UAAWC,IAAEwE,cAAjB,cACCT,M,QCGUU,EAFUnG,aAfH,SAACV,GACtB,MAAO,CACNoG,WAAYpG,EAAM8G,YAAYV,WAC9BO,YAAa3G,EAAM8G,YAAYH,gBAIR,SAACI,GACzB,MAAO,CACNL,QAAS,SAACC,GACTI,EAASL,YAAQC,QAKKjG,CAA6CuF,GCrCvDe,EAdC,SAACzG,GAChB,OACC,yBAAK4B,UAAWC,IAAE6E,aACjB,kBAAC,EAAD,CAAahD,UAAW1D,EAAM0D,UAC9BC,YAAa3D,EAAM2D,YACnBjB,QAAS1C,EAAM0C,QACfjB,QAASzB,EAAMyB,QACff,OAAQV,EAAMU,OACdS,iBAAkBnB,EAAMmB,mBACxB,kBAAC,EAAD,Q,wBCPGwF,E,+KAGJ,IAAIC,EAAS7G,KAAKC,MAAM6G,MAAMC,OAAOF,OACjCA,IACHA,EAAS7G,KAAKC,MAAM+G,mBAEnBhH,KAAKC,MAAMgH,QAAQ9H,KAAK,UAG1Ba,KAAKC,MAAMiH,eAAeL,GAE1B7G,KAAKC,MAAMkH,cAAcN,K,0CAIzB7G,KAAKoH,mB,yCAGaC,EAAWC,EAAWC,GACrCvH,KAAKC,MAAM6G,MAAMC,OAAOF,SAAWQ,EAAUP,MAAMC,OAAOF,QAC5D7G,KAAKoH,mB,+BAMN,OAAIpH,KAAKC,MAAMyB,QAGd,6BACE1B,KAAKC,MAAMuH,WACT,kBAAC3D,EAAA,EAAD,MACA,kBAAC,EAAD,iBAAa7D,KAAKC,MAAlB,CACD0C,SAAU3C,KAAKC,MAAM6G,MAAMC,OAAOF,OAClCnF,QAAS1B,KAAKC,MAAMyB,QACpBf,OAAQX,KAAKC,MAAMU,OACnBgD,UAAW3D,KAAKC,MAAM0D,UACtBC,YAAa5D,KAAKC,MAAM2D,YACxBxC,iBAAkBpB,KAAKC,MAAMmB,qBAZF,kBAACyC,EAAA,EAAD,U,GA3BF/D,aAqDhB2H,sBACdrH,aATqB,SAACV,GAAD,MAAY,CACjCgC,QAAShC,EAAM8G,YAAY9E,QAC3Bf,OAAQjB,EAAM8G,YAAY7F,OAC1B6G,WAAY9H,EAAM8G,YAAYgB,WAC9BR,iBAAkBtH,EAAME,KAAKiH,OAC7BlH,OAAQD,EAAME,KAAKD,UAIM,CAACuH,mBAAgBC,kBAAe/F,qBAAkBuC,cAAWC,kBACtF8D,IACA7H,IAHc4H,CAIbb","file":"static/js/3.810240e3.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"profileInfo_profileInfo__2EG2v\",\"avatar\":\"profileInfo_avatar__3n4wi\",\"statusInfo\":\"profileInfo_statusInfo__3w55l\",\"contactsSpan\":\"profileInfo_contactsSpan__2Ygkw\",\"contactsWrapper\":\"profileInfo_contactsWrapper__3Kd9b\",\"formGlobalError\":\"profileInfo_formGlobalError__FcdvN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrap\":\"profile_profileWrap__3bBGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsWrap\":\"myposts_myPostsWrap__1tOyj\",\"myPostsTitle\":\"myposts_myPostsTitle__29n4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrap\":\"post_postWrap__unKsU\",\"post\":\"post_post__3aesT\",\"active\":\"post_active__26Key\",\"likeDislikeBlock\":\"post_likeDislikeBlock__TcjAr\",\"like\":\"post_like__1OllM\",\"dislike\":\"post_dislike__2ILXH\"};","import React,  { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [ editMode, setEditMode]= useState(false);\r\n    let [ status, setStatus]= useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] );\r\n\r\n    const activateMod = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{ !editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<b><span  onDoubleClick={activateMod}>{props.status || \"No status here!\"}</span> </b>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{editMode && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input  onChange={onStatusChange} autoFocus={true}  onBlur={ deactivateEditMode} value={status} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport s from './profileInfo.module.css';\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { reduxForm } from 'redux-form';\r\n\r\nconst ProfileDataForm = ({handleSubmit, error, profile}) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit} action='' className={s.profileDataForm}>\r\n            <div><button type={'submit'}>Save</button></div>\r\n\t\t\t{ error && <div className={s.formGlobalError}>{error}</div> }\r\n\t\t\t<div> <span> <b> Full name : {createField('text', 'Full name', 'fullName', [], Input)} </b></span></div>\r\n\t\t\t<div> <span> <b> Looking for a job : {createField('checkbox', '', 'lookingForAJob', [], Input)}</b></span></div>\r\n\t\t\t<div><span> <b>My professional skills: {createField('text', 'Write here Your skills', 'lookingForAJobDescription', [], Textarea)}</b></span></div>\r\n            <div><span> <b> About me: {createField('text', 'Info about me', 'aboutMe', [], Textarea)} </b></span></div>\r\n\t\t\t<span className={s.contactsSpan}>Contacts: </span> \r\n            {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contacts}> <b> {key}: {createField('text', key, `contacts.${key}`, [], Input)} </b></div> \r\n            })}\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState, useEffect } from 'react';\r\nimport s from './profileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport avatar from '../../../assets/profilePic.jpg'\r\nimport ProfileDataFormReduxForm from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, isOwner, updateUserStatus, savePhoto, saveProfile}) => {\r\n\tlet [ editMode, setEditMode]= useState(false);\r\n\r\n\r\n\tif(!profile) {return <Preloader />}\r\n\tconst onSubmit =  formData => {\r\n\t\tsaveProfile(formData).then(()=> setEditMode(false))\r\n\t};\r\n\r\n\tconst onMainPhotoSelected = (e) => {\r\n\t\tif(e.target.files.length) {\r\n\t\t\tsavePhoto(e.target.files[0]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn <div className={s.profileInfo}>\r\n\t\t\t<div className={s.avatar}>\r\n\t\t\t\t<img src={profile.photos.large ? avatar : null} alt=\"ava\" />\r\n\t\t\t\t<div className={s.statusInfo}>\r\n\t\t\t\t\t<div> <span> <b>{profile.fullName} </b></span></div>\r\n\t\t\t\t\t<ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\t\t\t</div>\r\n\t\t\t{ editMode\r\n\t\t\t\t? <ProfileDataFormReduxForm \r\n\t\t\t\t\tonSubmit={onSubmit} \r\n\t\t\t\t\tprofile={profile} \r\n\t\t\t\t\tinitialValues={profile}/> \r\n\t\t\t\t: <ProfileData \r\n\t\t\t\t\tgoToEditMode={() => {setEditMode(true)}} \r\n\t\t\t\t\tprofile={profile} \r\n\t\t\t\t\tisOwner={isOwner}/> \r\n\t\t\t}\r\n\t\t</div>\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n\treturn (\r\n\t\t<div className={s.profileData}>\r\n\t\t\t{isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n\t\t\t<div> <span> <b> Full name : {profile.fullName} </b></span></div>\r\n\t\t\t<div> <span> <b> Looking for a job : {profile.lookingForAJob ? \"Yes\" : \"No\"} </b></span></div>\r\n\t\t\t<div><span> <b>My professional skills: {profile.lookingForAJobDescription}</b></span></div>\r\n\t\t\t<div><span><b>About Me: {profile.aboutMe}</b></span></div>\r\n\t\t\t<span className={s.contactsSpan}>Contacts: </span> \r\n\t\t\t<div className={s.contactsWrapper}>\r\n\t\t\t\t{Object.keys(profile.contacts).map(key => {\r\n\t\t\t\t\treturn <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\nexport const Contacts = ({contactTitle, contactValue}) => {\r\n\treturn <li><b><a href={contactValue} rel=\"noopener noreferrer\" target=\"_blank\">{contactTitle}</a></b></li>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./post.module.css\";\r\nimport avatar from '../../../../assets/profilePic.jpg'\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={s.postWrap}>\r\n\t\t\t<div className={`${s.post}`}>\r\n\t\t\t\t<img src={avatar} alt=\"cat\" />\r\n\t\t\t\t<span>{props.postText}</span>\r\n\t\t\t\t<div className={s.likeDislikeBlock}>\r\n\t\t\t\t\t<span className={s.like}><a href=\"/like\">Like &nbsp;</a> &nbsp;{props.likesCount} &nbsp;</span>\r\n\t\t\t\t\t<span className={s.dislike}><a href=\"/dislike\">Dislike &nbsp;</a> &nbsp;{props.dislikesCount} &nbsp;</span> \r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./myposts.module.css\";\r\n\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n\trequired,\r\n\tmaxlengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength = maxlengthCreator(1000);\r\n\r\nconst MyPostsForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit} className={s.form}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field\r\n\t\t\t\t\tcomponent={Textarea}\r\n\t\t\t\t\tname='newPostText'\r\n\t\t\t\t\tplaceholder='Enter Your post'\r\n\t\t\t\t\tvalidate={[required, maxLength]}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button type='submit'>Add post</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\nconst MyPostsReduxForm = reduxForm({ form: \"addPost\" })(MyPostsForm);\r\n\r\nconst MyPosts = React.memo( props => {\r\n\t\tlet myPostsEl = props.myPostData.map((p) => (\r\n\t\t\t<Post\r\n\t\t\t\tkey={p.id}\r\n\t\t\t\tid={p.id}\r\n\t\t\t\tpostText={p.postText}\r\n\t\t\t\tlikesCount={p.likesCount}\r\n\t\t\t\tdislikesCount={p.dislikesCount}\r\n\t\t\t/>\r\n\t\t));\r\n\r\n\t\tconst addNewPost = (values) => {\r\n\t\t\tprops.addPost(values.newPostText);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div className={s.myPostsWrap}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>My Posts</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.MyPostsFormWraper}>\r\n\t\t\t\t\t<MyPostsReduxForm onSubmit={addNewPost} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<h3 className={s.myPostsTitle}> New Posts</h3>\r\n\t\t\t\t{myPostsEl}\r\n\t\t\t</div>\r\n\t\t);\r\n})\r\n\r\nexport default MyPosts;\r\n","import { addPost } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n// const MyPostsContainer = () => {\r\n// \t// let state = props.store.getState();\r\n\r\n// \t// let addPost = () => {\r\n// \t// \tprops.store.dispatch(addPost());\r\n// \t// }\r\n\r\n// \t// let onPostChange = (text) => {\r\n// \t// \tlet action = updateNewPostText(text);\r\n// \t// \tprops.store.dispatch(action);\r\n// \t// }\r\n\r\n// \treturn (\r\n// \t\t<StoreContext.Consumer>\r\n// \t\t{\r\n// \t\t\t(store) => {\r\n// \t\t\t\tlet state = store.getState();\r\n// \t\t\t\tlet addPost = () => {\r\n// \t\t\t\t\tstore.dispatch(addPost());\r\n// \t\t\t\t}\r\n\r\n// \t\t\t\tlet onPostChange = (text) => {\r\n// \t\t\t\t\tlet action = updateNewPostText(text);\r\n// \t\t\t\t\tstore.dispatch(action);\r\n// \t\t\t\t}\r\n// \t\t\t\treturn (<MyPosts\r\n// \t\t\t\t\tupdateNewPostText={onPostChange}\r\n// \t\t\t\t\taddPost={addPost}\r\n// \t\t\t\t\tmyPostData={state.profilePage.myPostData}\r\n// \t\t\t\t\tnewPostText={state.profilePage.newPostText}\r\n// \t\t\t\t/>)\r\n// \t\t\t}\r\n// \t\t}\r\n// \t\t</StoreContext.Consumer>\r\n// \t);\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tmyPostData: state.profilePage.myPostData,\r\n\t\tnewPostText: state.profilePage.newPostText\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostText) => {\r\n\t\t\tdispatch(addPost(newPostText));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './profile.module.css';\r\n\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<div className={s.profileWrap}>\r\n\t\t\t<ProfileInfo savePhoto={props.savePhoto} \r\n\t\t\tsaveProfile={props.saveProfile}\r\n\t\t\tisOwner={props.isOwner} \r\n\t\t\tprofile={props.profile} \r\n\t\t\tstatus={props.status} \r\n\t\t\tupdateUserStatus={props.updateUserStatus}/>\r\n\t\t\t<MyPostsContainer/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getProfilePage, getUserStatus, updateUserStatus, savePhoto, saveProfile } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/WithAuthRedirect';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nclass ProfileContainer extends Component {\r\n\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif(!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif(!userId) {\r\n\t\t\t\tthis.props.history.push(\"/login\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getProfilePage(userId);\r\n\r\n\t\tthis.props.getUserStatus(userId);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n\t\t\tthis.refreshProfile();\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(!this.props.profile) return <Preloader />\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.props.isFetching \r\n\t\t\t\t\t? <Preloader /> \r\n\t\t\t\t\t: <Profile {...this.props} \r\n\t\t\t\t\t\tisOwner={!this.props.match.params.userId}\r\n\t\t\t\t\t\tprofile={this.props.profile} \r\n\t\t\t\t\t\tstatus={this.props.status} \r\n\t\t\t\t\t\tsavePhoto={this.props.savePhoto}\r\n\t\t\t\t\t\tsaveProfile={this.props.saveProfile}\r\n\t\t\t\t\t\tupdateUserStatus={this.props.updateUserStatus} />}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tisFetching: state.profilePage.isFetching,\r\n\tauthorizedUserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {getProfilePage, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n\twithRouter,\r\n\twithAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}